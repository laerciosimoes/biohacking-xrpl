"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_utils_hashing_hashMessage_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashMessage: function() { return /* binding */ hashMessage; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/data/concat.js\");\n/* harmony import */ var _encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../encoding/to-bytes.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/to-bytes.js\");\n/* harmony import */ var _keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keccak256.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n\n\n\nconst presignMessagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n/**\n * Ethereum Signed Message hashing\n * @param message - The message to hash, either as a string, a Uint8Array, or an object with a `raw` property containing a Uint8Array.\n * @param to_ - The desired output format of the hash (optional). Defaults to 'hex'.\n * @example\n * ```ts\n * import { hashMessage } from \"thirdweb/utils\";\n * const hash = hashMessage(\"hello world\");\n * ```\n * @returns The Ethereum Signed Message hash of the message in the specified format.\n * @utils\n */\nfunction hashMessage(message, to_) {\n    const messageBytes = (() => {\n        if (typeof message === \"string\") {\n            return (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(message);\n        }\n        if (message.raw instanceof Uint8Array) {\n            return message.raw;\n        }\n        return (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(message.raw);\n    })();\n    const prefixBytes = (0,_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.stringToBytes)(`${presignMessagePrefix}${messageBytes.length}`);\n    return (0,_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,viem__WEBPACK_IMPORTED_MODULE_2__.concat)([prefixBytes, messageBytes]), to_);\n}\n//# sourceMappingURL=hashMessage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9oYXNoaW5nL2hhc2hNZXNzYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEI7QUFDbUM7QUFDdEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQixvRUFBYTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQU87QUFDdEIsS0FBSztBQUNMLHdCQUF3QixvRUFBYSxJQUFJLHFCQUFxQixFQUFFLG9CQUFvQjtBQUNwRixXQUFXLHdEQUFTLENBQUMsNENBQU07QUFDM0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvaGFzaGluZy9oYXNoTWVzc2FnZS5qcz9kYjVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmNhdCB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyBzdHJpbmdUb0J5dGVzLCB0b0J5dGVzIH0gZnJvbSBcIi4uL2VuY29kaW5nL3RvLWJ5dGVzLmpzXCI7XG5pbXBvcnQgeyBrZWNjYWsyNTYgfSBmcm9tIFwiLi9rZWNjYWsyNTYuanNcIjtcbmNvbnN0IHByZXNpZ25NZXNzYWdlUHJlZml4ID0gXCJcXHgxOUV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlOlxcblwiO1xuLyoqXG4gKiBFdGhlcmV1bSBTaWduZWQgTWVzc2FnZSBoYXNoaW5nXG4gKiBAcGFyYW0gbWVzc2FnZSAtIFRoZSBtZXNzYWdlIHRvIGhhc2gsIGVpdGhlciBhcyBhIHN0cmluZywgYSBVaW50OEFycmF5LCBvciBhbiBvYmplY3Qgd2l0aCBhIGByYXdgIHByb3BlcnR5IGNvbnRhaW5pbmcgYSBVaW50OEFycmF5LlxuICogQHBhcmFtIHRvXyAtIFRoZSBkZXNpcmVkIG91dHB1dCBmb3JtYXQgb2YgdGhlIGhhc2ggKG9wdGlvbmFsKS4gRGVmYXVsdHMgdG8gJ2hleCcuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGhhc2hNZXNzYWdlIH0gZnJvbSBcInRoaXJkd2ViL3V0aWxzXCI7XG4gKiBjb25zdCBoYXNoID0gaGFzaE1lc3NhZ2UoXCJoZWxsbyB3b3JsZFwiKTtcbiAqIGBgYFxuICogQHJldHVybnMgVGhlIEV0aGVyZXVtIFNpZ25lZCBNZXNzYWdlIGhhc2ggb2YgdGhlIG1lc3NhZ2UgaW4gdGhlIHNwZWNpZmllZCBmb3JtYXQuXG4gKiBAdXRpbHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc2hNZXNzYWdlKG1lc3NhZ2UsIHRvXykge1xuICAgIGNvbnN0IG1lc3NhZ2VCeXRlcyA9ICgoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIHN0cmluZ1RvQnl0ZXMobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1lc3NhZ2UucmF3IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2UucmF3O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b0J5dGVzKG1lc3NhZ2UucmF3KTtcbiAgICB9KSgpO1xuICAgIGNvbnN0IHByZWZpeEJ5dGVzID0gc3RyaW5nVG9CeXRlcyhgJHtwcmVzaWduTWVzc2FnZVByZWZpeH0ke21lc3NhZ2VCeXRlcy5sZW5ndGh9YCk7XG4gICAgcmV0dXJuIGtlY2NhazI1Nihjb25jYXQoW3ByZWZpeEJ5dGVzLCBtZXNzYWdlQnl0ZXNdKSwgdG9fKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hNZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/hashMessage.js\n"));

/***/ })

}]);