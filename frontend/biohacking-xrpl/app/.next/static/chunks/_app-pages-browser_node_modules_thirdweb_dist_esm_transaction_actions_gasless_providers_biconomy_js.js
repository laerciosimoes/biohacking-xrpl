"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_transaction_actions_gasless_providers_biconomy_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareBiconomyTransaction: function() { return /* binding */ prepareBiconomyTransaction; },\n/* harmony export */   relayBiconomyTransaction: function() { return /* binding */ relayBiconomyTransaction; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../constants/addresses.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _contract_contract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../contract/contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/contract/contract.js\");\n/* harmony import */ var _utils_encoding_helpers_is_hex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/encoding/helpers/is-hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/hashing/keccak256.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _read_contract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n\n\n\n\n\n\n\n// we do not send multiple batches so this stays consistent\nconst BATCH_ID = 0n;\n/**\n * @internal - only exported for testing\n */\nasync function prepareBiconomyTransaction({ account, serializableTransaction, transaction, gasless, }) {\n    const forwarderContract = (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_0__.getContract)({\n        address: gasless.relayerForwarderAddress,\n        chain: transaction.chain,\n        client: transaction.client,\n    });\n    // get the nonce\n    const nonce = await (0,_read_contract_js__WEBPACK_IMPORTED_MODULE_1__.readContract)({\n        contract: forwarderContract,\n        method: \"function getNonce(address,uint256) view returns (uint256)\",\n        params: [account.address, BATCH_ID],\n    });\n    const deadline = Math.floor(Date.now() / 1000) + (gasless.deadlineSeconds ?? 3600);\n    const request = {\n        from: account.address,\n        to: serializableTransaction.to,\n        token: _constants_addresses_js__WEBPACK_IMPORTED_MODULE_2__.ADDRESS_ZERO,\n        txGas: serializableTransaction.gas,\n        tokenGasPrice: 0n,\n        batchId: BATCH_ID,\n        batchNonce: nonce,\n        deadline: deadline,\n        data: serializableTransaction.data,\n    };\n    if (!request.to) {\n        throw new Error(\"Cannot send a transaction without a `to` address\");\n    }\n    if (!request.txGas) {\n        throw new Error(\"Cannot send a transaction without a `gas` value\");\n    }\n    if (!request.data) {\n        throw new Error(\"Cannot send a transaction without a `data` value\");\n    }\n    // create the hash\n    const message = (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)([\n        { type: \"address\" },\n        { type: \"address\" },\n        { type: \"address\" },\n        { type: \"uint256\" },\n        { type: \"uint256\" },\n        { type: \"uint256\" },\n        { type: \"uint256\" },\n        { type: \"bytes32\" },\n    ], [\n        request.from,\n        request.to,\n        request.token,\n        request.txGas,\n        request.tokenGasPrice,\n        request.batchId,\n        request.batchNonce,\n        (0,_utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_4__.keccak256)(request.data),\n    ]);\n    const signature = await account.signMessage({ message });\n    return [request, signature];\n}\n/**\n * @internal\n */\nasync function relayBiconomyTransaction(options) {\n    const [request, signature] = await prepareBiconomyTransaction(options);\n    // send the transaction to the biconomy api\n    const response = await fetch(\"https://api.biconomy.io/api/v2/meta-tx/native\", {\n        method: \"POST\",\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_5__.stringify)({\n            apiId: options.gasless.apiId,\n            params: [request, signature],\n            from: request.from,\n            to: request.to,\n            gasLimit: request.txGas,\n        }),\n        headers: {\n            \"x-api-key\": options.gasless.apiKey,\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n    });\n    if (!response.ok) {\n        response.body?.cancel();\n        throw new Error(`Failed to send transaction: ${await response.text()}`);\n    }\n    const json = await response.json();\n    const transactionHash = json.txHash;\n    if ((0,_utils_encoding_helpers_is_hex_js__WEBPACK_IMPORTED_MODULE_6__.isHex)(transactionHash)) {\n        return {\n            transactionHash: transactionHash,\n            chain: options.transaction.chain,\n            client: options.transaction.client,\n        };\n    }\n    throw new Error(`Failed to send transaction: ${(0,_utils_json_js__WEBPACK_IMPORTED_MODULE_5__.stringify)(json)}`);\n}\n//# sourceMappingURL=biconomy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL2dhc2xlc3MvcHJvdmlkZXJzL2JpY29ub215LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEyQztBQUN1QjtBQUNIO0FBQ007QUFDRjtBQUNiO0FBQ0c7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRDQUE0Qyx5REFBeUQ7QUFDNUcsOEJBQThCLGtFQUFXO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHdCQUF3QiwrREFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseURBQW1CO0FBQ3ZDLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCLFVBQVUsaUJBQWlCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFTO0FBQ2pCO0FBQ0Esa0RBQWtELFNBQVM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHlEQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDhDQUE4QztBQUM5QyxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQSx1REFBdUQsc0JBQXNCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0VBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQseURBQVMsT0FBTztBQUNuRTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL2dhc2xlc3MvcHJvdmlkZXJzL2JpY29ub215LmpzP2ExZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlQWJpUGFyYW1ldGVycyB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyBBRERSRVNTX1pFUk8gfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29uc3RhbnRzL2FkZHJlc3Nlcy5qc1wiO1xuaW1wb3J0IHsgZ2V0Q29udHJhY3QgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29udHJhY3QvY29udHJhY3QuanNcIjtcbmltcG9ydCB7IGlzSGV4IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2VuY29kaW5nL2hlbHBlcnMvaXMtaGV4LmpzXCI7XG5pbXBvcnQgeyBrZWNjYWsyNTYgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvaGFzaGluZy9rZWNjYWsyNTYuanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5pbXBvcnQgeyByZWFkQ29udHJhY3QgfSBmcm9tIFwiLi4vLi4vLi4vcmVhZC1jb250cmFjdC5qc1wiO1xuLy8gd2UgZG8gbm90IHNlbmQgbXVsdGlwbGUgYmF0Y2hlcyBzbyB0aGlzIHN0YXlzIGNvbnNpc3RlbnRcbmNvbnN0IEJBVENIX0lEID0gMG47XG4vKipcbiAqIEBpbnRlcm5hbCAtIG9ubHkgZXhwb3J0ZWQgZm9yIHRlc3RpbmdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZXBhcmVCaWNvbm9teVRyYW5zYWN0aW9uKHsgYWNjb3VudCwgc2VyaWFsaXphYmxlVHJhbnNhY3Rpb24sIHRyYW5zYWN0aW9uLCBnYXNsZXNzLCB9KSB7XG4gICAgY29uc3QgZm9yd2FyZGVyQ29udHJhY3QgPSBnZXRDb250cmFjdCh7XG4gICAgICAgIGFkZHJlc3M6IGdhc2xlc3MucmVsYXllckZvcndhcmRlckFkZHJlc3MsXG4gICAgICAgIGNoYWluOiB0cmFuc2FjdGlvbi5jaGFpbixcbiAgICAgICAgY2xpZW50OiB0cmFuc2FjdGlvbi5jbGllbnQsXG4gICAgfSk7XG4gICAgLy8gZ2V0IHRoZSBub25jZVxuICAgIGNvbnN0IG5vbmNlID0gYXdhaXQgcmVhZENvbnRyYWN0KHtcbiAgICAgICAgY29udHJhY3Q6IGZvcndhcmRlckNvbnRyYWN0LFxuICAgICAgICBtZXRob2Q6IFwiZnVuY3Rpb24gZ2V0Tm9uY2UoYWRkcmVzcyx1aW50MjU2KSB2aWV3IHJldHVybnMgKHVpbnQyNTYpXCIsXG4gICAgICAgIHBhcmFtczogW2FjY291bnQuYWRkcmVzcywgQkFUQ0hfSURdLFxuICAgIH0pO1xuICAgIGNvbnN0IGRlYWRsaW5lID0gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCkgKyAoZ2FzbGVzcy5kZWFkbGluZVNlY29uZHMgPz8gMzYwMCk7XG4gICAgY29uc3QgcmVxdWVzdCA9IHtcbiAgICAgICAgZnJvbTogYWNjb3VudC5hZGRyZXNzLFxuICAgICAgICB0bzogc2VyaWFsaXphYmxlVHJhbnNhY3Rpb24udG8sXG4gICAgICAgIHRva2VuOiBBRERSRVNTX1pFUk8sXG4gICAgICAgIHR4R2FzOiBzZXJpYWxpemFibGVUcmFuc2FjdGlvbi5nYXMsXG4gICAgICAgIHRva2VuR2FzUHJpY2U6IDBuLFxuICAgICAgICBiYXRjaElkOiBCQVRDSF9JRCxcbiAgICAgICAgYmF0Y2hOb25jZTogbm9uY2UsXG4gICAgICAgIGRlYWRsaW5lOiBkZWFkbGluZSxcbiAgICAgICAgZGF0YTogc2VyaWFsaXphYmxlVHJhbnNhY3Rpb24uZGF0YSxcbiAgICB9O1xuICAgIGlmICghcmVxdWVzdC50bykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc2VuZCBhIHRyYW5zYWN0aW9uIHdpdGhvdXQgYSBgdG9gIGFkZHJlc3NcIik7XG4gICAgfVxuICAgIGlmICghcmVxdWVzdC50eEdhcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc2VuZCBhIHRyYW5zYWN0aW9uIHdpdGhvdXQgYSBgZ2FzYCB2YWx1ZVwiKTtcbiAgICB9XG4gICAgaWYgKCFyZXF1ZXN0LmRhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNlbmQgYSB0cmFuc2FjdGlvbiB3aXRob3V0IGEgYGRhdGFgIHZhbHVlXCIpO1xuICAgIH1cbiAgICAvLyBjcmVhdGUgdGhlIGhhc2hcbiAgICBjb25zdCBtZXNzYWdlID0gZW5jb2RlQWJpUGFyYW1ldGVycyhbXG4gICAgICAgIHsgdHlwZTogXCJhZGRyZXNzXCIgfSxcbiAgICAgICAgeyB0eXBlOiBcImFkZHJlc3NcIiB9LFxuICAgICAgICB7IHR5cGU6IFwiYWRkcmVzc1wiIH0sXG4gICAgICAgIHsgdHlwZTogXCJ1aW50MjU2XCIgfSxcbiAgICAgICAgeyB0eXBlOiBcInVpbnQyNTZcIiB9LFxuICAgICAgICB7IHR5cGU6IFwidWludDI1NlwiIH0sXG4gICAgICAgIHsgdHlwZTogXCJ1aW50MjU2XCIgfSxcbiAgICAgICAgeyB0eXBlOiBcImJ5dGVzMzJcIiB9LFxuICAgIF0sIFtcbiAgICAgICAgcmVxdWVzdC5mcm9tLFxuICAgICAgICByZXF1ZXN0LnRvLFxuICAgICAgICByZXF1ZXN0LnRva2VuLFxuICAgICAgICByZXF1ZXN0LnR4R2FzLFxuICAgICAgICByZXF1ZXN0LnRva2VuR2FzUHJpY2UsXG4gICAgICAgIHJlcXVlc3QuYmF0Y2hJZCxcbiAgICAgICAgcmVxdWVzdC5iYXRjaE5vbmNlLFxuICAgICAgICBrZWNjYWsyNTYocmVxdWVzdC5kYXRhKSxcbiAgICBdKTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBhY2NvdW50LnNpZ25NZXNzYWdlKHsgbWVzc2FnZSB9KTtcbiAgICByZXR1cm4gW3JlcXVlc3QsIHNpZ25hdHVyZV07XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVsYXlCaWNvbm9teVRyYW5zYWN0aW9uKG9wdGlvbnMpIHtcbiAgICBjb25zdCBbcmVxdWVzdCwgc2lnbmF0dXJlXSA9IGF3YWl0IHByZXBhcmVCaWNvbm9teVRyYW5zYWN0aW9uKG9wdGlvbnMpO1xuICAgIC8vIHNlbmQgdGhlIHRyYW5zYWN0aW9uIHRvIHRoZSBiaWNvbm9teSBhcGlcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9hcGkuYmljb25vbXkuaW8vYXBpL3YyL21ldGEtdHgvbmF0aXZlXCIsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgYm9keTogc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIGFwaUlkOiBvcHRpb25zLmdhc2xlc3MuYXBpSWQsXG4gICAgICAgICAgICBwYXJhbXM6IFtyZXF1ZXN0LCBzaWduYXR1cmVdLFxuICAgICAgICAgICAgZnJvbTogcmVxdWVzdC5mcm9tLFxuICAgICAgICAgICAgdG86IHJlcXVlc3QudG8sXG4gICAgICAgICAgICBnYXNMaW1pdDogcmVxdWVzdC50eEdhcyxcbiAgICAgICAgfSksXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwieC1hcGkta2V5XCI6IG9wdGlvbnMuZ2FzbGVzcy5hcGlLZXksXG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOFwiLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgcmVzcG9uc2UuYm9keT8uY2FuY2VsKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHNlbmQgdHJhbnNhY3Rpb246ICR7YXdhaXQgcmVzcG9uc2UudGV4dCgpfWApO1xuICAgIH1cbiAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uSGFzaCA9IGpzb24udHhIYXNoO1xuICAgIGlmIChpc0hleCh0cmFuc2FjdGlvbkhhc2gpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0cmFuc2FjdGlvbkhhc2g6IHRyYW5zYWN0aW9uSGFzaCxcbiAgICAgICAgICAgIGNoYWluOiBvcHRpb25zLnRyYW5zYWN0aW9uLmNoYWluLFxuICAgICAgICAgICAgY2xpZW50OiBvcHRpb25zLnRyYW5zYWN0aW9uLmNsaWVudCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gc2VuZCB0cmFuc2FjdGlvbjogJHtzdHJpbmdpZnkoanNvbil9YCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iaWNvbm9teS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js\n"));

/***/ })

}]);